var searchIndex = new Map(JSON.parse('[["chacha20_poly1305",{"t":"FGPPFNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNOHOOOOHHNNNNNNHNNNNNNNNNOONNN","n":["Cli","Command","Decrypt","Encrypt","ModeArgs","augment_args","","augment_args_for_update","","augment_subcommands","augment_subcommands_for_update","borrow","","","borrow_mut","","","command","","command_for_update","deref","","","deref_mut","","","drop","","","from","","","from_arg_matches","","","from_arg_matches_mut","","","group_id","","has_subcommand","init","","","input_file","into","","","iterations","main","mem_size","output_file","parallelism","password","poly_update_stream","sha256_file","try_from","","","try_into","","","try_main","type_id","","","update_from_arg_matches","","","update_from_arg_matches_mut","","","verbose","verify_hash","vzip","",""],"q":[[0,"chacha20_poly1305"],[77,"clap_builder::builder::command"],[78,"clap_builder::parser::matches::arg_matches"],[79,"clap_builder"],[80,"core::result"],[81,"clap_builder::util::id"],[82,"core::option"],[83,"std::path"],[84,"alloc::string"],[85,"poly1305"],[86,"alloc::vec"],[87,"encryptor::error"],[88,"core::any"]],"i":"``j0`hAf102212012011112012012012012012010212001200`0000``120120`12012012010120","f":"`````{bb}00000{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{}b}{hj}1{l{{d{c}}}{}}00{l{{d{fc}}}{}}00{ln}00{cc{}}00{{{d{A`}}}{{Ad{hAb}}}}{{{d{A`}}}{{Ad{jAb}}}}{{{d{A`}}}{{Ad{AfAb}}}}{{{d{fA`}}}{{Ad{hAb}}}}{{{d{fA`}}}{{Ad{jAb}}}}{{{d{fA`}}}{{Ad{AfAb}}}}{{}{{Aj{Ah}}}}0{{{d{Al}}}An}{{}l}00{AfB`}{{}c{}}00{AfBb}{{}n}131{AfBd}{{{d{fBf}}{d{{Bj{Bh}}}}{d{f{Bl{Bh}}}}}n}{{{d{B`}}}{{Bn{Bd}}}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{{}{{Bn{n}}}}{dC`}00{{{d{fh}}{d{A`}}}{{Ad{nAb}}}}{{{d{fj}}{d{A`}}}{{Ad{nAb}}}}{{{d{fAf}}{d{A`}}}{{Ad{nAb}}}}{{{d{fh}}{d{fA`}}}{{Ad{nAb}}}}{{{d{fj}}{d{fA`}}}{{Ad{nAb}}}}{{{d{fAf}}{d{fA`}}}{{Ad{nAb}}}}{hAn}{AfAj}{{}c{}}00","D":"n","p":[[5,"Command",77],[1,"reference",null,null,1],[0,"mut"],[5,"Cli",0],[6,"Command",0],[1,"usize"],[1,"unit"],[5,"ArgMatches",78],[8,"Error",79],[6,"Result",80,null,1],[5,"ModeArgs",0],[5,"Id",81],[6,"Option",82,null,1],[1,"str"],[1,"bool"],[5,"PathBuf",83],[1,"u32"],[5,"String",84],[5,"Poly1305",85],[1,"u8"],[1,"slice"],[5,"Vec",86],[8,"Result",87],[5,"TypeId",88]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEYAAwABABwAIQAMADEAHAA=","P":[[11,"T"],[17,""],[20,"T"],[26,""],[29,"T"],[32,""],[45,"U"],[48,""],[56,"U,T"],[59,"U"],[62,""],[74,"V"]]}],["encryptor",{"t":"FSSNNHNNNHNNNHNHHCNNNNHOOHONNNNHPPPGPPPINNNNNNNNNNNNHNNNN","n":["Argon2Config","HEADER_LEN","MAGIC","borrow","borrow_mut","chacha20_block","clone","clone_into","clone_to_uninit","ct_eq","default","deref","deref_mut","derive_key","drop","encrypt_decrypt","encrypt_decrypt_in_place","error","fmt","from","init","into","lock","mem_cost_kib","parallelism","read_file_ct","time_cost","to_owned","try_from","try_into","type_id","unlock","Argon2","AuthFailure","Err","Error","FormatError","Io","Ok","Result","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","","","init","into","set_verbose","to_string","try_from","try_into","type_id"],"q":[[0,"encryptor"],[32,"encryptor::error"],[57,"secrecy"],[58,"alloc::vec"],[59,"core::fmt"],[60,"std::io::error"],[61,"std::path"],[62,"core::result"],[63,"core::any"],[64,"argon2::error"],[65,"alloc::string"]],"i":"```A`0`000`000`0```0000`00`00000`Bj0Aj`110`111111111111`1111","f":"`{{}b}{{}d}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{{l{{j{h}}}}}}n{d{{j{h}}}}}{{j{h}}}}{{{d{A`}}}A`}{{d{d{fc}}}Ab{}}{{dh}Ab}{{{d{{Ad{h}}}}{d{{Ad{h}}}}}Af}{{}A`}{b{{d{c}}}{}}{b{{d{fc}}}{}}{{{d{Ah}}{d{{j{h}}}}{d{A`}}}{{Aj{{l{{j{h}}}}}}}}{bAb}{{{d{{Ad{h}}}}{d{{l{{j{h}}}}}}{d{{j{h}}}}}{{Al{h}}}}{{{d{f{Ad{h}}}}{d{{l{{j{h}}}}}}{d{{j{h}}}}{d{fn}}}Ab}`{{{d{A`}}{d{fAn}}}B`}{cc{}}{{}b}{{}c{}}{{{d{{Ad{h}}}}}{{Bb{Ab}}}}{A`n}0{{{d{Bd}}}{{Aj{{Al{h}}}}}}1{dc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{dBh}6````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{b{{d{c}}}{}}{b{{d{fc}}}{}}{bAb}{{{d{Bj}}{d{fAn}}}B`}0{BlBj}{BnBj}{cc{}}{{}b}{{}c{}}{AfAb}{dC`}?>=","D":"Cl","p":[[1,"usize"],[1,"reference",null,null,1],[0,"mut"],[1,"u8"],[1,"array"],[5,"Secret",57],[1,"u32"],[5,"Argon2Config",0],[1,"unit"],[1,"slice"],[1,"bool"],[1,"str"],[8,"Result",32],[5,"Vec",58],[5,"Formatter",59],[8,"Result",59],[8,"Result",60],[5,"Path",61],[6,"Result",62,null,1],[5,"TypeId",63],[6,"Error",32],[5,"Error",60],[6,"Error",64],[5,"String",65]],"r":[],"b":[[45,"impl-Debug-for-Error"],[46,"impl-Display-for-Error"],[47,"impl-From%3CError%3E-for-Error"],[48,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABsACgAEAAEABwACAAwAAQAPAAAAEwAAABUAAAAcAAMAKQAIADMAAAA2AAMA","P":[[3,"T"],[5,""],[7,"T"],[8,""],[11,"T"],[13,""],[19,"T"],[20,""],[21,"U"],[22,""],[27,"T"],[28,"U,T"],[29,"U"],[30,""],[40,"T"],[44,""],[49,"T"],[50,""],[51,"U"],[52,""],[54,"U,T"],[55,"U"],[56,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2386,2394]}