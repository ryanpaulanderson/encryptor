name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            vendor
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo-audit
        id: cache-audit
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-audit
          key: ${{ runner.os }}-cargo-audit-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo-audit
        if: steps.cache-audit.outputs.cache-hit != 'true'
        run: cargo install --locked --version ^0.17 --jobs 4 cargo-audit

      - name: Run checks
        run: |
          cargo fmt -- --check
          cargo clippy -- -D warnings
          RUST_TEST_THREADS=$(nproc) cargo test
          cargo audit --deny warnings
          RUSTDOCFLAGS="--deny broken-intra-doc-links" cargo doc --no-deps --quiet

  benchmark:
    name: ðŸ“Š Benchmark
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache critcmp
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/critcmp
          key: ${{ runner.os }}-cargo-critcmp-${{ hashFiles('**/Cargo.lock') }}

      - name: Install critcmp
        if: steps.cache-critcmp.outputs.cache-hit != 'true'
        run: cargo install critcmp

      - name: Run baseline benches on `main`
        run: |
          git fetch origin main
          git checkout origin/main
          # MODIFIED LINE: Add --bench encryptor_benchmarks
          cargo bench --bench encryptor_benchmarks -- --save-baseline main

      - name: Run PR benches
        run: |
          git checkout ${{ github.sha }}
          # Only save the baseline for the PR. The comparison is done by critcmp later.
          cargo bench --bench encryptor_benchmarks -- --save-baseline pr

      - name: Compare benchmarks
        run: critcmp main pr > bench.diff

      - name: Post benchmark report
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const diff = require('fs').readFileSync('bench.diff', 'utf8');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ðŸ“Š Benchmark delta\n\`\`\`\n${diff}\n\`\`\``
            });

