name: CD

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
      - name: Install security tools
        run: |
          cargo install --version ^0.17 cargo-audit
          cargo install --version ^0.11 cargo-deny
          cargo install --git https://github.com/rust-secure-code/cargo-auditable
      - name: Format
        run: cargo fmt -- --check
      - name: Lint
        run: cargo clippy -- -D warnings
      - name: Test
        run: cargo test --offline
      - name: Dependency audit
        run: cargo audit --locked --deny warnings
      - name: Build
        run: cargo build --release
      - name: Policy check
        run: cargo deny check
      - name: Binary audit
        run: cargo audit --json target/release/chacha20_poly1305
      - name: Determine next version
        id: version
        run: |
          latest_tag=$(git tag --list 'v*.*.*' --sort=-v:refname | head -n1)
          if [ -z "$latest_tag" ]; then
            version="0.1.0"
          else
            ver=${latest_tag#v}
            major=${ver%%.*}
            rest=${ver#*.}
            minor=${rest%%.*}
            minor=$((minor+1))
            version="$major.$minor.0"
          fi
          echo "version=$version" >> "$GITHUB_OUTPUT"
      - name: Archive binary
        run: |
          mkdir artifacts
          cp target/release/chacha20_poly1305 artifacts/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/chacha20_poly1305
          asset_name: chacha20_poly1305
          asset_content_type: application/octet-stream
